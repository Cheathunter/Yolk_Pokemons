// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Yolk_Pokemon.Application.Context;

#nullable disable

namespace Yolk_Pokemon.Application.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    [Migration("20250810091733_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id")
                        .HasName("Elements_pkey");

                    b.HasIndex(new[] { "Name" }, "Elements_Name_key")
                        .IsUnique();

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("Moves_pkey");

                    b.HasIndex("TypeId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CaughtAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("Pokemon_pkey");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Pokemon", (string)null);
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.PokemonMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MoveId")
                        .HasColumnType("integer");

                    b.Property<int>("PokemonId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PokemonMoves_pkey");

                    b.HasIndex("MoveId");

                    b.HasIndex(new[] { "PokemonId", "MoveId" }, "unique_pokemon_move")
                        .IsUnique();

                    b.ToTable("PokemonMoves");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.PokemonMoveDetail", b =>
                {
                    b.Property<string>("MoveName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MoveType")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("Power")
                        .HasColumnType("integer");

                    b.ToTable((string)null);

                    b.ToView("PokemonMoveDetails", (string)null);
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.PokemonWithType", b =>
                {
                    b.Property<DateTime?>("CaughtAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("Health")
                        .HasColumnType("integer");

                    b.Property<int?>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("PokemonName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TypeName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.ToTable((string)null);

                    b.ToView("PokemonWithTypes", (string)null);
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Losses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Wins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id")
                        .HasName("Trainers_pkey");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Move", b =>
                {
                    b.HasOne("Yolk_Pokemon.Application.Models.Element", "Type")
                        .WithMany("Moves")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("Moves_TypeId_fkey");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Pokemon", b =>
                {
                    b.HasOne("Yolk_Pokemon.Application.Models.Trainer", "Owner")
                        .WithMany("Pokemons")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("Pokemon_OwnerId_fkey");

                    b.HasOne("Yolk_Pokemon.Application.Models.Element", "Type")
                        .WithMany("Pokemons")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("Pokemon_TypeId_fkey");

                    b.Navigation("Owner");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.PokemonMove", b =>
                {
                    b.HasOne("Yolk_Pokemon.Application.Models.Move", "Move")
                        .WithMany("PokemonMoves")
                        .HasForeignKey("MoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PokemonMoves_MoveId_fkey");

                    b.HasOne("Yolk_Pokemon.Application.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonMoves")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PokemonMoves_PokemonId_fkey");

                    b.Navigation("Move");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Element", b =>
                {
                    b.Navigation("Moves");

                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Move", b =>
                {
                    b.Navigation("PokemonMoves");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Pokemon", b =>
                {
                    b.Navigation("PokemonMoves");
                });

            modelBuilder.Entity("Yolk_Pokemon.Application.Models.Trainer", b =>
                {
                    b.Navigation("Pokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
